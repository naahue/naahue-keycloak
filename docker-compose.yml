services:
  postgres:
    image: ghcr.io/identicum/postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    ports:
      - "5432:5432"

  keycloak:
    image: ghcr.io/identicum/keycloak:25.0
    container_name: keycloak
    depends_on:
      - postgres
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_DB_URL_HOST: postgres
    command: start-dev
    ports:
      - "8080:8080"

  sherpa:
    container_name: sherpa
    image: ghcr.io/identicum/sherpa-deploy:latest
    pull_policy: always
    ports:
      - "9000:9000"
    volumes:
      - "./terraform:/terraform"
    working_dir: /terraform
    command: "python apply-config.py"
    depends_on:
      - keycloak

  proxy:
    image: ghcr.io/identicum/nginx:latest
    container_name: proxy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"

  prueba:
    image: ghcr.io/identicum/ipax:latest
    container_name: prueba
    restart: always
    environment:
      NGINX_RESOLVER: 127.0.0.11 valid=5s
      NGINX_LOG_LEVEL: debug
      OIDC_DISCOVERY: http://keycloakweb:8080/realms/restusers/.well-known/openid-configuration
      OIDC_CLIENT_ID: prueba_client_id
      OIDC_CLIENT_SECRET: prueba_client_secret
      OIDC_SCOPE: openid profile
      OIDC_POST_LOGOUT_REDIRECT_URI: http://prueba/logoutSuccess.html
      OIDC_REDIRECT_URI: http://prueba/private/redirect_uri

  web1:
    image: ghcr.io/identicum/nginx:latest
    container_name: web1
    volumes:
      - ./web1:/usr/share/nginx/html
    ports:
      - "8081:80"

  web2:
    image: ghcr.io/identicum/nginx:latest
    container_name: web2
    volumes:
      - ./web2:/usr/share/nginx/html
    ports:
      - "8082:80"

  web3:
    image: ghcr.io/identicum/nginx:latest
    container_name: web3
    volumes:
      - ./web3:/usr/share/nginx/html
    ports:
      - "8083:80"

volumes:
  postgres_data:
